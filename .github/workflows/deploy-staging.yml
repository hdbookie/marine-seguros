name: Deploy to Staging

on:
  push:
    branches:
      - staging
  pull_request:
    branches:
      - staging
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run linting
      run: |
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test imports
      run: |
        python -c "import streamlit; print('Streamlit version:', streamlit.__version__)"
        python -c "from core.unified_extractor import UnifiedFinancialExtractor; print('UnifiedFinancialExtractor imported successfully')"
        python -c "from gerenciador_arquivos import GerenciadorArquivos; print('GerenciadorArquivos imported successfully')"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/staging'
    
    steps:
    - name: Deploy to Railway Staging
      uses: bervProject/railway-deploy@main
      with:
        railway_token: ${{ secrets.RAILWAY_TOKEN }}
        service: marine-seguros-staging
      env:
        RAILWAY_ENVIRONMENT: staging